# -*- coding: utf-8 -*-
"""サンプリング.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19YE2mfWER6cbYiIqIbtbEpf3NAOMa7d_

# Pythonによる単純ランダムサンプリング

必要なライブラリをインポート
"""

# 数値計算に使うライブラリ
import numpy as np
import pandas as pd
from matplotlib import pyplot as plt

"""ガチャガチャのデータをnumpyのアレイを用いて作成"""

capsule_4=np.array([100,200,300,400])
capsule_4

"""母集団からのランダムサンプリング"""

# np.random.choice関数を用いて、4個のカプセルの中からランダムにいくつかのカプセルを選ぶことができる
# size引数で選ぶ数を選ぶことができる
# replace=Falseで複数選択しない
np.random.choice(capsule_4,size=1,replace=False)

# 4個のカプセルの中からランダムに3個のカプセルを選ぶ場合
np.random.choice(capsule_4,size=3,replace=False)

# シード値を固定すると全く同じサンプリング結果を得ることができる
# 乱数のシードはnp.random.seed関数を使って指定
    # ▪ 引数の数値に同じ数値を指定すると、同じ値が出る
np.random.seed(123)
np.random.choice(capsule_4,size=3,replace=False)

# 得られた標本から平均値を計算(標本平均)
np.random.seed(1)
np.random.choice(capsule_4,size=3,replace=False).mean()

"""#実際のデータからの標本抽出

データの読み込み
"""

ramen_data=pd.read_excel("ramen-ratings.xlsx")
# print(ramen_data.head
ramen_data.head()

"""DataFrameのsample関数を用いて単純ランダムサンプリング"""

ramen_sample=ramen_data.sample(n=100,replace=False)
print(ramen_sample.head())

"""サンプリングしたデータをファイルに出力"""

ramen_sample.to_csv("ramen_sample.csv")